import lejos.robotics.SampleProvider;

public class USLocalizer {
	public enum LocalizationType {
		FALLING_EDGE, RISING_EDGE
	};

	public static double ROTATION_SPEED = 30;

	private Odometer odo;
	private SampleProvider usSensor;
	private float[] usData;
	private LocalizationType locType;
	private boolean isWallClear;
	private Navigation nav;

	public USLocalizer(Odometer odo, SampleProvider usSensor, float[] usData, LocalizationType locType,
			Navigation nav) {
		this.odo = odo;
		this.usSensor = usSensor;
		this.usData = usData;
		this.locType = locType;
		this.nav = nav;
	}

	public void doLocalization() {
		double angleA, angleB;

		if (locType == LocalizationType.FALLING_EDGE) {
			// rotate the robot until it sees no wall
			nav.setSpeeds(30, -30);
			while (getFilteredData() < 35);

			while (getFilteredData() == 35);
			nav.stopMotors();
			angleA = odo.getAng();

			// switch direction and wait until it sees no wall
			nav.setSpeeds(30, -30);
			while (getFilteredData() < 35);
		

			// keep rotating until the robot sees a wall, then latch the angle
			nav.setSpeeds(30, -30);
			while (getFilteredData() == 35);
			
			angleB = odo.getAng();

			// angleA is clockwise from angleB, so assume the average of the
			// angles to the right of angleB is 45 degrees past 'north'
			double avAng = (angleA + angleB) / 2;
			double correctionAngle = 45 - avAng;
			// formula in tutorial:
			if (angleA > angleB) {
				angleB += 360;
			}
			odo.fixTheta(correctionAngle);

			nav.turnTo(270, true);

			double x = getFilteredData();

			nav.turnTo(180, true);

			double y = getFilteredData();

			odo.setX(-30+x);
			odo.setY(-30+y);
		}
	}

	private float getFilteredData() {
		usSensor.fetchSample(usData, 0);
		float distance = usData[0];
		if (distance > 35) {
			distance = 35;
		}
		return distance;
	}

}
